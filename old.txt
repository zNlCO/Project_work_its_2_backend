router.put('/modify/:id', auth, async (req, res) => {
  if (!req.isOperator)
    return res.status(403).json({ error: 'Accesso negato: solo operatori possono modificare modelli' });

  const { id } = req.params;
  const { descrizione, type, size, elettrica, prezzo, imgUrl } = req.body;

  try {
    const modello = await Modello.findByIdAndUpdate(
      id,
      {
        descrizione,
        type,
        size,
        elettrica,
        prezzo,
        imgUrl,
      },
      { new: true, runValidators: true }
    );

    if (!modello) return res.status(404).json({ error: 'Modello non trovato' });

    res.json(modello);
  } catch (err) {
    res.status(400).json({ error: err.message });
  }
});

router.delete('/delete/:id', auth, async (req, res) => {
  if (!req.isOperator)
    return res.status(403).json({ error: 'Accesso negato: solo operatori possono eliminare modelli' });

  const { id } = req.params;

  try {
    const modello = await Modello.findByIdAndDelete(id);

    if (!modello) return res.status(404).json({ error: 'Modello non trovato' });

    return res.status(200).json({
        message: 'Modello eliminato con successo'
    });

  } catch (err) {
    res.status(400).json({ error: err.message });
  }
});
